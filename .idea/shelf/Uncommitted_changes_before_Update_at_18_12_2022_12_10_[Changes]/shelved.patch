Index: app/src/main/java/com/example/ev_sc/Home/HomeScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ev_sc.Home;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Location;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.RatingBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.example.ev_sc.Home.Station.StationObj;\r\nimport com.example.ev_sc.Person.DataBases.UserDB;\r\nimport com.example.ev_sc.Person.UserObj;\r\nimport com.example.ev_sc.Profile.AdminProfileScreen;\r\nimport com.example.ev_sc.Profile.UserProfileScreen;\r\nimport com.example.ev_sc.R;\r\nimport com.example.ev_sc.Reviews.reviewsDB;\r\nimport com.example.ev_sc.Reviews.reviewsObj;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.GeoPoint;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n\r\npublic class HomeScreen extends AppCompatActivity implements OnMapReadyCallback {\r\n\r\n    /**\r\n     * method to set the map.\r\n     *\r\n     * @param googleMap google map object\r\n     */\r\n    @Override\r\n    public void onMapReady(@NonNull GoogleMap googleMap) {\r\n        Toast.makeText(this, \"Map is ready\", Toast.LENGTH_SHORT).show();\r\n        Log.d(TAG, \"Map is ready\");\r\n        mMap = googleMap;\r\n\r\n        if (mLocationPermissionGranted) {\r\n            getDeviceLocation();\r\n\r\n            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)\r\n                    != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this,\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n                return;\r\n            }\r\n\r\n            // shows the blue dot on the map //\r\n            mMap.setMyLocationEnabled(true);\r\n            // pinpoint to the current location with a button, is set to false because we'll add on later //\r\n            mMap.getUiSettings().setMyLocationButtonEnabled(false);\r\n\r\n            init();\r\n        }\r\n    }\r\n\r\n    private static final String TAG = \"MapHome\";\r\n\r\n    private static final String FINE_LOCATION = Manifest.permission.ACCESS_FINE_LOCATION;\r\n    private static final String COURSE_LOCATION = Manifest.permission.ACCESS_COARSE_LOCATION;\r\n    private static final int LOCATION_PERMISSION_REQUEST_CODE = 1234;\r\n    private static final float DEFAULT_ZOOM = 15f;\r\n\r\n    /*widgets*/\r\n    private EditText search_bar;\r\n\r\n\r\n    /*popup station*/\r\n    private AlertDialog.Builder dialogBuilder;\r\n    private AlertDialog dialog;\r\n\r\n    /*vars*/\r\n    private Boolean mLocationPermissionGranted = false;\r\n    private GoogleMap mMap;\r\n    private FusedLocationProviderClient mFusedLocationProviderClient;\r\n\r\n    /*maps*/\r\n    private final HashMap<String, View> StationPopUps = new HashMap<String, View>(); //this map is used to map each station to its poppable window//\r\n    private final HashMap<String, StationObj> all_stations = new HashMap<String, StationObj>(); // this is used to map all the stations upon login //\r\n\r\n    /*firebase*/\r\n    FirebaseFirestore fStore = FirebaseFirestore.getInstance();\r\n\r\n    /*user profile handle*/\r\n    private final FirebaseAuth fAuth = FirebaseAuth.getInstance();\r\n    private UserObj current_user;\r\n\r\n    @Override\r\n    public void onCreate(Bundle Instance) {\r\n        super.onCreate(Instance);\r\n        setContentView(R.layout.home);\r\n\r\n        search_bar = findViewById(R.id.search_bar);\r\n\r\n        getLocationPermission();\r\n        load_stations_data();\r\n        load_user_data();\r\n    }\r\n\r\n    /**\r\n     * this method responsible for creating the menu bar\r\n     *\r\n     * @param menu menu bar\r\n     * @return true on success.\r\n     */\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.home_appbar, menu);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * this method is responsible for handling the listeners on the action bar items\r\n     *\r\n     * @param item menu bar item\r\n     * @return true on success\r\n     */\r\n    @SuppressLint(\"NonConstantResourceId\")\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n\r\n        switch (item.getItemId()) {\r\n\r\n            case R.id.profile_menu:\r\n                if (current_user.getPermissions() == 1) {\r\n                    Intent home_to_admin_profile = new Intent(HomeScreen.this, AdminProfileScreen.class);\r\n                    home_to_admin_profile.putExtra(\"User\", current_user);\r\n\r\n                    startActivity(home_to_admin_profile);\r\n                    finish();\r\n                    return true;\r\n                } else {\r\n                    Intent home_to_profile = new Intent(HomeScreen.this, UserProfileScreen.class);\r\n                    //load profile upon clicking on it//\r\n                    home_to_profile.putExtra(\"User\", current_user);\r\n                    startActivity(home_to_profile);\r\n\r\n                    finish();\r\n                    return true;\r\n                }\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is responsible for loading all the data from the firestore database,\r\n     * it loads it to a HashMap we then use.\r\n     */\r\n    private void load_stations_data() {\r\n        Log.d(TAG, \"loading_stations_data: loading Stations data from database to object\");\r\n\r\n        fStore.collection(\"stations\")\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            StationDB s_DB = new StationDB();\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                // load all stations data from database to the hashmap with unique key of doc id//\r\n                                StationObj tmp_station = s_DB.GetStationFromDatabase(document);\r\n                                all_stations.put(document.getId(), tmp_station);\r\n\r\n                                //init map markers on the map//\r\n                                createMarker(tmp_station.getLatLng(), tmp_station.getStation_name());\r\n\r\n                            }\r\n                        } else {\r\n                            Log.e(TAG, \"geoLocate: Error getting documents: \", task.getException());\r\n                        }\r\n                        BuildAllPopUpStationWindows();\r\n                    }\r\n                });\r\n    }\r\n\r\n    /**\r\n     * this method loads the current user data,\r\n     * using that data we transfer it via the intent to the user profile (onOptionItemSelected)\r\n     */\r\n    private void load_user_data() {\r\n        Log.d(TAG, \"load_user_data: loading User data from database\");\r\n        String Client_UID = fAuth.getCurrentUser().getUid();\r\n\r\n        // this is parsing the data from firestore using the string UID of the current user logged in!//\r\n        fStore.collection(\"users\").\r\n                document(Client_UID).get().addOnSuccessListener(documentSnapshot -> {\r\n                    UserDB db = new UserDB();\r\n                    current_user = db.GetUserFromDatabase(documentSnapshot);\r\n                    Log.d(TAG, \"CURRENT USER: => \\n\" + current_user.toString());\r\n                });\r\n    }\r\n\r\n    /**\r\n     * this method allows for overriding buttons in the keyboard ( enter .. )\r\n     * and calls for geoLocate to locate the required place\r\n     */\r\n    private void init() {\r\n        Log.d(TAG, \"init: initializing\");\r\n\r\n        //TODO: avoid free text upon pressing ENTER\r\n        search_bar.setOnEditorActionListener(new TextView.OnEditorActionListener() {\r\n            @Override\r\n            public boolean onEditorAction(TextView v, int actionId, KeyEvent keyEvent) {\r\n                if (actionId == EditorInfo.IME_ACTION_SEARCH ||\r\n                        actionId == EditorInfo.IME_ACTION_DONE ||\r\n                        keyEvent.getAction() == KeyEvent.ACTION_DOWN ||\r\n                        keyEvent.getAction() == KeyEvent.KEYCODE_ENTER) {\r\n                    //execute method for searching the location//\r\n                    geoLocate();\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method locates the address ltlng from the database given the address name!\r\n     */\r\n    private void geoLocate() {\r\n        Log.d(TAG, \"geoLocate: geolocationg\");\r\n\r\n        String searchString = search_bar.getText().toString().trim();\r\n        StationObj current_station;\r\n        //TODO: consider moving some of the code to StationDB//\r\n\r\n        for (Map.Entry<String, StationObj> station : this.all_stations.entrySet()) {\r\n            if (station.getValue().getStation_name().equals(searchString)) {\r\n                // get the latlng//\r\n                current_station = station.getValue(); //updating the current station//\r\n                Log.d(TAG, \"STATION LOCATION =>\" + current_station.getLatLng());\r\n\r\n                moveCamera(current_station.getLatLng());\r\n\r\n                return;\r\n            }\r\n        }\r\n        search_bar.setError(\"Station does not exist.\");\r\n    }\r\n\r\n    /**\r\n     * this method simply gets the device location, in order to pinpoint it on the map for the user.\r\n     */\r\n    private void getDeviceLocation() {\r\n        Log.d(TAG, \"getDeviceLocation: getting the device current location.\");\r\n\r\n        mFusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this);\r\n\r\n        try {\r\n            if (mLocationPermissionGranted) {\r\n\r\n                final Task<Location> location = mFusedLocationProviderClient.getLastLocation();\r\n                location.addOnCompleteListener(new OnCompleteListener() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task task) {\r\n                        if (task.isSuccessful()) {\r\n                            Log.d(TAG, \"onComplete getDeviceLocation: found location!\");\r\n                            Location currentLocation = (Location) task.getResult();\r\n\r\n                            //move camera to the current location of the user//\r\n                            moveCamera(new LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()));\r\n\r\n                        } else {\r\n                            Log.d(TAG, \"onComplete getDeviceLocation: current location is null\");\r\n                            Toast.makeText(HomeScreen.this, \"unable to get current location\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        } catch (SecurityException e) {\r\n            Log.e(TAG, \"getDeviceLocation: Security Exception: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * this method moves the current camera to a new location on the map\r\n     *\r\n     * @param latLng coordinates of the location (latitude,longitude)\r\n     */\r\n    private void moveCamera(LatLng latLng) {\r\n        Log.d(TAG, \"moveCamera: Moving the camera to: (lat: \" + latLng.latitude + \", lng: \" + latLng.longitude + \" )\");\r\n\r\n        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, HomeScreen.DEFAULT_ZOOM));\r\n    }\r\n\r\n    /**\r\n     * this method is responsible for creating a station marker on the map.\r\n     *\r\n     * @param latLng a position we currently creating the marker for.\r\n     */\r\n    private void createMarker(LatLng latLng, String s_name) {\r\n        Log.d(TAG, \"CreateMarker: Creating markers for station: =>\" + s_name);\r\n\r\n        MarkerOptions options = new MarkerOptions()\r\n                .position(latLng)\r\n                .title(s_name); //TODO: consider using a unique title for markerListener//\r\n        mMap.addMarker(options);\r\n\r\n        MarkerListener();\r\n    }\r\n\r\n    /**\r\n     * This method is responsible for setting a listener on the Marker in the map,\r\n     * the listener opens a new poppable station window.\r\n     */\r\n    private void MarkerListener() {\r\n        Log.d(TAG, \"MarkerListener: Setting marker listener\");\r\n        mMap.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {\r\n            @Override\r\n            public boolean onMarkerClick(@NonNull Marker marker) {\r\n                View v = StationPopUps.get(marker.getTitle());\r\n                StartDialogStation(v);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This private method is responsible for building all the station pop up windows.\r\n     */\r\n    private void BuildAllPopUpStationWindows() {\r\n        Log.d(TAG, \"BuildAllPopUpStationsWindows: building all the stations windows \" + this.all_stations.toString());\r\n\r\n        for (Map.Entry<String, StationObj> station : this.all_stations.entrySet()) {\r\n//            Log.d(TAG, \"Creating STation Window for STATION : => \"+ station.getValue());\r\n            createNewStationPopup(station.getValue());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method to initialize the map on the screen\r\n     */\r\n    private void initMap() {\r\n        Log.d(TAG, \"initMap: initializing map...\");\r\n\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map_home_screen);\r\n        assert mapFragment != null;\r\n        mapFragment.getMapAsync(HomeScreen.this);\r\n    }\r\n\r\n    /**\r\n     * This method gets the permissions for the location of the user.\r\n     */\r\n    private void getLocationPermission() {\r\n        Log.d(TAG, \"getLocationPermission: getting location...\");\r\n        String[] permissions = {Manifest.permission.ACCESS_FINE_LOCATION,\r\n                Manifest.permission.ACCESS_COARSE_LOCATION};\r\n\r\n        if (ContextCompat.checkSelfPermission(this.getApplicationContext(), FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\r\n            if (ContextCompat.checkSelfPermission(this.getApplicationContext(), COURSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\r\n                mLocationPermissionGranted = true;\r\n                initMap();\r\n            } else {\r\n                ActivityCompat.requestPermissions(this, permissions, LOCATION_PERMISSION_REQUEST_CODE);\r\n            }\r\n        } else {\r\n            ActivityCompat.requestPermissions(this, permissions, LOCATION_PERMISSION_REQUEST_CODE);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * this method supposed to check permission for loading the map.\r\n     */\r\n    @SuppressLint(\"MissingSuperCall\")\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        Log.d(TAG, \"onRequestPermissionResult: Called.\");\r\n        mLocationPermissionGranted = false;\r\n\r\n        switch (requestCode) {\r\n            case LOCATION_PERMISSION_REQUEST_CODE: {\r\n                if (grantResults.length > 0) {\r\n                    // check case if all permissions are granted //\r\n                    for (int grantResult : grantResults) {\r\n                        if (grantResult != PackageManager.PERMISSION_GRANTED) {\r\n                            mLocationPermissionGranted = false;\r\n                            Log.d(TAG, \"onRequestPermissionResult: Permission failed..\");\r\n                            return;\r\n                        }\r\n                    }\r\n                    Log.d(TAG, \"onRequestPermissionResult: Permission granted..\");\r\n\r\n                    mLocationPermissionGranted = true;\r\n                    //init map//\r\n                    initMap();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This is an outsource method, it creates the poppable station widget\r\n     * it invokes the moment we click on a marker omn the map and shows the details of the station\r\n     */\r\n    @SuppressLint({\"SetTextI18n\", \"CutPasteId\"})\r\n    // ignores cases where numbers are turned to strings.\r\n    public void createNewStationPopup(StationObj station) {\r\n        Log.d(TAG, \"createNewStationPopup: creating new popup window for station => \" + station.getStation_name());\r\n\r\n        dialogBuilder = new AlertDialog.Builder(this);\r\n        final View PopupStation = getLayoutInflater().inflate(R.layout.station, null);\r\n\r\n        /*widgets*/\r\n        TextView name_of_station = (TextView) PopupStation.findViewById(R.id.name_of_station);\r\n        TextView rate_of_station = (TextView) PopupStation.findViewById(R.id.rate_of_station);\r\n        TextView the_num_of_chargers = (TextView) PopupStation.findViewById(R.id.the_num_of_chargers);\r\n        TextView address_of_station = (TextView) PopupStation.findViewById(R.id.address_of_station);\r\n        ImageView return_map_station_widget = (ImageView) PopupStation.findViewById(R.id.return_map_station_widget);\r\n        FloatingActionButton rate_station = (FloatingActionButton) PopupStation.findViewById(R.id.rate_station_button);\r\n\r\n\r\n        name_of_station.setText(station.getStation_name());\r\n        address_of_station.setText(station.getStation_address());\r\n        the_num_of_chargers.setText(Integer.toString(station.getCharging_stations()));\r\n        rate_of_station.setText(Double.toString(station.getAverageGrade()));\r\n\r\n        // invokes the rating of the station popup window //\r\n        rate_station.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                final View PopupRating = getLayoutInflater().inflate(R.layout.rating, null);\r\n                dialogBuilder.setView(PopupRating);\r\n                dialog = dialogBuilder.create();\r\n                dialog.show();\r\n\r\n\r\n                //widgets//\r\n                Button button_submit_rating = (Button) PopupRating.findViewById(R.id.button_submit_rating);\r\n                RatingBar rating_bar = (RatingBar) PopupRating.findViewById(R.id.rating_bar);\r\n                EditText review_line= (EditText) PopupRating.findViewById(R.id.review_line);\r\n\r\n                button_submit_rating.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n\r\n                        Double user_rating = Double.valueOf(rating_bar.getRating());\r\n                        Double curr_grade = current_station.getAverageGrade();\r\n                        Double SumOf_reviews = current_station.getSumOf_reviews();\r\n                        String curr_review =  review_line.getText().toString().trim();\r\n\r\n                        reviewsObj review = new reviewsObj(current_user.getID(), user_rating, curr_review);\r\n                        reviewsDB reviewsDB = new reviewsDB();\r\n                        Log.d(TAG, \"Review??????????????????? \"+ review.toString());\r\n\r\n                        reviewsDB.AddReviewToDatabase(review, current_station.getID());\r\n                        double grade=0;\r\n                        if(SumOf_reviews==0){\r\n                         grade=user_rating;\r\n                        }else{\r\n                            grade = (SumOf_reviews*curr_grade + user_rating)/(SumOf_reviews+1);\r\n                        }\r\n                        Log.d(TAG, \"Review ADDED? =??? \"+ review.toString());\r\n                        //TODO: create a good updating grade mechanisem relied upon database//\r\n\r\n                        rate_of_station.setText(Double.toString(grade));\r\n                        current_station.setAvgGrade(grade);\r\n                        SumOf_reviews+=1;\r\n                        current_station.setSumOf_reviews(SumOf_reviews);\r\n                        StationDB.updateStationToDatabase(current_station);\r\n\r\n                        dialog.dismiss();\r\n\r\n\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // waze directions upon clicking on the button //\r\n        ImageButton waze_nav = PopupStation.findViewById(R.id.waze_nav);\r\n        waze_nav.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String latitude = Double.toString(station.getLocation().getLatitude());\r\n                String longitude = Double.toString(station.getLocation().getLongitude());\r\n                try {\r\n                    // Launch Waze to look for desired station:\r\n                    String url = \"https://waze.com/ul?q=66%20Acacia%20Avenue&ll=\" + latitude + \",\" + longitude + \"&navigate=yes\";\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\r\n                    startActivity(intent);\r\n                } catch (ActivityNotFoundException ex) {\r\n                    // If Waze is not installed, open it in Google Play:\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"market://details?id=com.waze\"));\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n\r\n        // listener to return to the map //\r\n        return_map_station_widget.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        //adding the new popup to the hashmap//\r\n        StationPopUps.put(station.getStation_name(), PopupStation);\r\n\r\n    }\r\n\r\n    /**\r\n     * This method gets a popup window and starts it on a dialog builder.\r\n     *\r\n     * @param PopupStation represents a View window of a given station.\r\n     */\r\n    public void StartDialogStation(View PopupStation) {\r\n        dialogBuilder.setView(PopupStation);\r\n        dialog = dialogBuilder.create();\r\n        dialog.show();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/ev_sc/Home/HomeScreen.java b/app/src/main/java/com/example/ev_sc/Home/HomeScreen.java
--- a/app/src/main/java/com/example/ev_sc/Home/HomeScreen.java	(revision e30ac4ecb75efc79e4bc95cc973ed15c070cbb6f)
+++ b/app/src/main/java/com/example/ev_sc/Home/HomeScreen.java	(date 1671180864338)
@@ -476,15 +476,15 @@
                     public void onClick(View v) {
 
                         Double user_rating = Double.valueOf(rating_bar.getRating());
-                        Double curr_grade = current_station.getAverageGrade();
-                        Double SumOf_reviews = current_station.getSumOf_reviews();
+                        Double curr_grade = station.getAverageGrade();
+                        Double SumOf_reviews = station.getSumOf_reviews();
                         String curr_review =  review_line.getText().toString().trim();
 
                         reviewsObj review = new reviewsObj(current_user.getID(), user_rating, curr_review);
                         reviewsDB reviewsDB = new reviewsDB();
                         Log.d(TAG, "Review??????????????????? "+ review.toString());
 
-                        reviewsDB.AddReviewToDatabase(review, current_station.getID());
+                        reviewsDB.AddReviewToDatabase(review, station.getID());
                         double grade=0;
                         if(SumOf_reviews==0){
                          grade=user_rating;
@@ -495,10 +495,10 @@
                         //TODO: create a good updating grade mechanisem relied upon database//
 
                         rate_of_station.setText(Double.toString(grade));
-                        current_station.setAvgGrade(grade);
+                        station.setAvgGrade(grade);
                         SumOf_reviews+=1;
-                        current_station.setSumOf_reviews(SumOf_reviews);
-                        StationDB.updateStationToDatabase(current_station);
+                        station.setSumOf_reviews(SumOf_reviews);
+                        StationDB.updateStationToDatabase(station);
 
                         dialog.dismiss();
 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_12_2022_11_36_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_12_2022_11_36_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_11_12_2022_11_36_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_12_2022_11_36_[Changes]/shelved.patch	(revision e30ac4ecb75efc79e4bc95cc973ed15c070cbb6f)
+++ /dev/null	(revision e30ac4ecb75efc79e4bc95cc973ed15c070cbb6f)
@@ -1,273 +0,0 @@
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_27_11_2022_16_24_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_27_11_2022_16_24_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_27_11_2022_16_24_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_27_11_2022_16_24_[Changes]/shelved.patch	(revision ecc0f9121721250f78ad22889ff2fa2e747cc703)
-+++ /dev/null	(revision ecc0f9121721250f78ad22889ff2fa2e747cc703)
-@@ -1,254 +0,0 @@
--Index: app/src/main/res/layout/login.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <EditText\r\n            android:id=\"@+id/username_enter_login\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:ems=\"10\"\r\n            android:inputType=\"text\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.238\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.336\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/title_login\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"#FFFFFF\"\r\n            android:text=\" EV-SC \"\r\n            android:textSize=\"32dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.126\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/username_view_login\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\" Username\"\r\n            android:textSize=\"20dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.149\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.265\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/password_enter_login\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:ems=\"10\"\r\n            android:inputType=\"textPassword\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.238\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/password_view_login\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\" Password\"\r\n            android:textSize=\"20dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.148\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.436\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/login_button\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"LOGIN\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.523\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.619\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/register_button_login\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"35dp\"\r\n            android:text=\"Register\"\r\n            android:textSize=\"10dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.906\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.65\" />\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</LinearLayout>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/res/layout/login.xml b/app/src/main/res/layout/login.xml
----- a/app/src/main/res/layout/login.xml	(revision 684a68f0b06e25251ce44f5eacf4918f67b9c7c2)
--+++ b/app/src/main/res/layout/login.xml	(date 1669558932159)
--@@ -97,5 +97,17 @@
--             app:layout_constraintStart_toStartOf="parent"
--             app:layout_constraintTop_toTopOf="parent"
--             app:layout_constraintVertical_bias="0.65" />
--+
--+        <Button
--+            android:id="@+id/add_station_login_button"
--+            android:layout_width="wrap_content"
--+            android:layout_height="wrap_content"
--+            android:text="Add Station"
--+            app:layout_constraintBottom_toBottomOf="parent"
--+            app:layout_constraintEnd_toEndOf="parent"
--+            app:layout_constraintHorizontal_bias="0.126"
--+            app:layout_constraintStart_toStartOf="parent"
--+            app:layout_constraintTop_toTopOf="parent"
--+            app:layout_constraintVertical_bias="0.881" />
--     </androidx.constraintlayout.widget.ConstraintLayout>
-- </LinearLayout>
--\ No newline at end of file
--Index: app/src/main/java/com/example/ev_sc/Login/LoginScreen.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.ev_sc.Login;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\n\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\n\r\nimport com.example.ev_sc.Home.HomeScreen;\r\nimport com.example.ev_sc.R;\r\n\r\nimport com.example.ev_sc.Register.RegisterScreen;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class LoginScreen extends Activity {\r\n\r\n    Button login_button;\r\n    Button register_button_login;\r\n\r\n    EditText username_enter_login;\r\n    EditText password_enter_login;\r\n\r\n    TextView title_login;\r\n    TextView username_view_login;\r\n    TextView password_view_login;\r\n\r\n    FirebaseAuth fAuth;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle Instance) {\r\n        super.onCreate(Instance);\r\n        setContentView(R.layout.login);\r\n\r\n        fAuth = FirebaseAuth.getInstance();\r\n\r\n        // init widgets //\r\n\r\n        login_button = (Button) findViewById(R.id.login_button);\r\n        register_button_login = (Button) findViewById(R.id.register_button_login);\r\n\r\n        username_enter_login = (EditText) (findViewById(R.id.username_enter_login));\r\n        password_enter_login = (EditText) (findViewById(R.id.password_enter_login));\r\n\r\n        title_login = (TextView) (findViewById(R.id.title_login));\r\n        username_view_login = (TextView) (findViewById(R.id.username_view_login));\r\n        password_view_login = (TextView) (findViewById(R.id.password_view_login));\r\n\r\n        // init listeners //\r\n        OnClickRegisterButton();\r\n\r\n        OnClickLoginButton();\r\n\r\n    }\r\n\r\n    /**\r\n     * Adding the listener click to move from Login screen to Register screen Via REGISTER BUTTON.\r\n     */\r\n    private void OnClickRegisterButton() {\r\n        register_button_login.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View view) {\r\n                Intent login_to_register = new Intent(view.getContext(), RegisterScreen.class);\r\n                startActivityForResult(login_to_register, 0);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adding the listener click to move from Login screen to Home screen Via LOGIN BUTTON\r\n     */\r\n    private void OnClickLoginButton() {\r\n        login_button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String email = username_enter_login.getText().toString().trim();\r\n                String password = password_enter_login.getText().toString().trim();\r\n\r\n                if (TextUtils.isEmpty(email)) {\r\n                    username_enter_login.setError(\"Email Is Required\");\r\n                    return;\r\n                }\r\n                if (TextUtils.isEmpty(password)) {\r\n                    password_enter_login.setError(\"Password Is Required\");\r\n                }\r\n                /*TODO: add more exceptions*/\r\n\r\n                //authenticate the user\r\n                System.out.println(\"Email:\" + email+ \"Pass: \"+ password);\r\n                startActivity(new Intent(getApplicationContext(), HomeScreen.class));\r\n\r\n//                fAuth.signInWithEmailAndPassword(email, password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n//                    @Override\r\n//                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n//                        if (task.isSuccessful()) {\r\n//                            //successfully login.\r\n//                            Toast.makeText(LoginScreen.this, \"Logged in Successfully\", Toast.LENGTH_SHORT).show();\r\n////                            startActivity(new Intent(getApplicationContext(), HomeScreen.class));\r\n//                        } else {\r\n//                            // email or password incorrect or user does not exist\r\n//                            Toast.makeText(LoginScreen.this, \"Email Or Password Incorrect \" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();\r\n//                        }\r\n//                    }\r\n//                });\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/ev_sc/Login/LoginScreen.java b/app/src/main/java/com/example/ev_sc/Login/LoginScreen.java
----- a/app/src/main/java/com/example/ev_sc/Login/LoginScreen.java	(revision 684a68f0b06e25251ce44f5eacf4918f67b9c7c2)
--+++ b/app/src/main/java/com/example/ev_sc/Login/LoginScreen.java	(date 1669559051809)
--@@ -15,6 +15,7 @@
-- import androidx.annotation.NonNull;
-- 
-- import com.example.ev_sc.Home.HomeScreen;
--+import com.example.ev_sc.Home.Station.AddStation;
-- import com.example.ev_sc.R;
-- 
-- import com.example.ev_sc.Register.RegisterScreen;
--@@ -28,6 +29,7 @@
-- 
--     Button login_button;
--     Button register_button_login;
--+    Button add_station_login_button; // temp
-- 
--     EditText username_enter_login;
--     EditText password_enter_login;
--@@ -49,6 +51,7 @@
-- 
--         login_button = (Button) findViewById(R.id.login_button);
--         register_button_login = (Button) findViewById(R.id.register_button_login);
--+        add_station_login_button = (Button) findViewById(R.id.add_station_login_button);
-- 
--         username_enter_login = (EditText) (findViewById(R.id.username_enter_login));
--         password_enter_login = (EditText) (findViewById(R.id.password_enter_login));
--@@ -62,6 +65,8 @@
-- 
--         OnClickLoginButton();
-- 
--+        OnClickAddStationButton();
--+
--     }
-- 
--     /**
--@@ -117,5 +122,14 @@
--         });
--     }
-- 
--+    private void OnClickAddStationButton() {
--+        add_station_login_button.setOnClickListener(new View.OnClickListener() {
--+            public void onClick(View view) {
--+                Intent login_to_add_station = new Intent(view.getContext(), AddStation.class);
--+                startActivityForResult(login_to_add_station, 0);
--+            }
--+        });
--+    }
--+
-- 
-- }
--Index: app/src/main/java/com/example/ev_sc/Home/Station/AddStation.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/ev_sc/Home/Station/AddStation.java b/app/src/main/java/com/example/ev_sc/Home/Station/AddStation.java
--new file mode 100644
----- /dev/null	(date 1669559045266)
--+++ b/app/src/main/java/com/example/ev_sc/Home/Station/AddStation.java	(date 1669559045266)
--@@ -0,0 +1,99 @@
--+package com.example.ev_sc.Home.Station;
--+
--+import android.app.Activity;
--+import android.os.Bundle;
--+import android.text.TextUtils;
--+import android.util.Log;
--+import android.view.View;
--+import android.widget.Button;
--+import android.widget.EditText;
--+
--+import com.example.ev_sc.R;
--+import com.google.firebase.firestore.GeoPoint;
--+
--+public class AddStation extends Activity {
--+
--+    EditText station_name;
--+    EditText station_address;
--+    EditText station_charging;
--+    EditText station_avg_grade;
--+    EditText station_latitude;
--+    EditText station_longtitude;
--+
--+    Button add_station_button;
--+
--+    @Override
--+    protected void onCreate(Bundle Instance) {
--+        super.onCreate(Instance);
--+        setContentView(R.layout.add_station);
--+
--+        // init widgets //
--+        station_name = (EditText) (findViewById(R.id.station_name));
--+        station_address = (EditText) (findViewById(R.id.station_address));
--+        station_charging = (EditText) (findViewById(R.id.station_charging));
--+        station_avg_grade = (EditText) (findViewById(R.id.station_avg_grade));
--+        station_latitude = (EditText) (findViewById(R.id.station_latitude));
--+        station_longtitude = (EditText) (findViewById(R.id.station_longtitude));
--+        add_station_button = (Button) (findViewById(R.id.add_station_button));
--+
--+
--+        OnClickAddButton();
--+    }
--+
--+    private void OnClickAddButton() {
--+        add_station_button.setOnClickListener(new View.OnClickListener() {
--+            public void onClick(View view) {
--+                String name = station_name.getText().toString().trim();
--+                String address = station_address.getText().toString().trim();
--+                String charging_stations = station_charging.getText().toString().trim();
--+                String station_average_grade = station_avg_grade.getText().toString().trim();
--+                String latitude = station_latitude.getText().toString().trim();
--+                String longtitude = station_longtitude.getText().toString().trim();
--+
--+                if (TextUtils.isEmpty(name)) {
--+                    station_name.setError("Name is empty");
--+                    return;
--+                }
--+                if (TextUtils.isEmpty(address)) {
--+                    station_address.setError("Address is empty");
--+                    return;
--+                }
--+                if (TextUtils.isEmpty(charging_stations)) {
--+                    station_charging.setError("Must indicate how many charging stations");
--+                    return;
--+                }
--+
--+                if (TextUtils.isEmpty(station_average_grade)) {
--+                    station_avg_grade.setError("Must indicate station grade");
--+                    return;
--+                }
--+
--+                if (TextUtils.isEmpty(latitude)) {
--+                    station_latitude.setError("Confirm Password Is Required");
--+                    return;
--+                }
--+
--+                if (TextUtils.isEmpty(longtitude)) {
--+                    station_longtitude.setError("Confirm Password Is Required");
--+                    return;
--+                }
--+
--+                // preparing the geo location
--+                Double lat = Double.parseDouble(latitude);
--+                Double lon = Double.parseDouble(longtitude);
--+                GeoPoint station_coords = new GeoPoint(lat, lon);
--+
--+                // preparing other station elements
--+                Integer charging = Integer.parseInt(charging_stations);
--+                Double station_grade = Double.parseDouble(station_average_grade);
--+
--+                // creating Station object and adding it to database
--+                StationObj station_to_add = new StationObj(station_grade,address,charging,name,station_coords);
--+                StationDB db = new StationDB();
--+                db.AddStationToDatabase(station_to_add);
--+                Log.d("add station","Success");
--+
--+            }
--+        });
--+    }
--+}
--\ No newline at end of file
--Index: app/src/main/java/com/example/ev_sc/Home/Station/StationInterface.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.ev_sc.Home.Station;\r\n\r\npublic interface StationInterface {\r\n\r\n    /**\r\n     * @return Integer representing the Avg grade of the station.\r\n     */\r\n    public int getGrade();\r\n\r\n    /**\r\n     * @return String representing the Address of the station\r\n     */\r\n    public String getStation_address();\r\n\r\n    /**\r\n     * @return Integer representing the amount of available charging station in the station.\r\n     */\r\n    public int getCharging_stations();\r\n\r\n    /**\r\n     * @return String representing the Station name.\r\n     */\r\n    public String getStation_name();\r\n\r\n    /**\r\n     * @return List of String that contains all the reviews given by users for this station.\r\n     */\r\n    public String[] getReviews();\r\n\r\n    public void setGrade(int grade);\r\n\r\n    public void setStation_address(String station_address);\r\n\r\n    public void setCharging_stations(int charging_stations);\r\n\r\n    public void setStation_name(String station_name);\r\n\r\n    public void setReviews(String[] reviews);\r\n\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/ev_sc/Home/Station/StationInterface.java b/app/src/main/java/com/example/ev_sc/Home/Station/StationInterface.java
----- a/app/src/main/java/com/example/ev_sc/Home/Station/StationInterface.java	(revision 684a68f0b06e25251ce44f5eacf4918f67b9c7c2)
--+++ b/app/src/main/java/com/example/ev_sc/Home/Station/StationInterface.java	(date 1669558932159)
--@@ -5,7 +5,7 @@
--     /**
--      * @return Integer representing the Avg grade of the station.
--      */
---    public int getGrade();
--+    public double getGrade();
-- 
--     /**
--      * @return String representing the Address of the station
--@@ -25,9 +25,9 @@
--     /**
--      * @return List of String that contains all the reviews given by users for this station.
--      */
---    public String[] getReviews();
--+    //public String[] getReviews();
-- 
---    public void setGrade(int grade);
--+    public void setGrade(double grade);
-- 
--     public void setStation_address(String station_address);
-- 
--@@ -35,6 +35,6 @@
-- 
--     public void setStation_name(String station_name);
-- 
---    public void setReviews(String[] reviews);
--+  //  public void setReviews(String[] reviews);
-- 
-- }
--Index: app/src/main/AndroidManifest.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:enableOnBackInvokedCallback=\"true\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.EVSC\"\r\n        tools:targetApi=\"tiramisu\">\r\n\r\n        <meta-data android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"@string/map_key\"/>\r\n\r\n        <activity\r\n            android:name=\".Login.LoginScreen\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.EVSC\"\r\n            android:launchMode=\"singleInstance\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n\r\n        <activity android:name=\".Register.RegisterScreen\" />\r\n\r\n        <activity android:name=\".Home.HomeScreen\" />\r\n\r\n\r\n    </application>\r\n\r\n</manifest>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
----- a/app/src/main/AndroidManifest.xml	(revision 684a68f0b06e25251ce44f5eacf4918f67b9c7c2)
--+++ b/app/src/main/AndroidManifest.xml	(date 1669558932159)
--@@ -41,6 +41,7 @@
--         <activity android:name=".Register.RegisterScreen" />
-- 
--         <activity android:name=".Home.HomeScreen" />
--+        <activity android:name=".Home.Station.AddStation"/>
-- 
-- 
--     </application>
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_27_11_2022_16_24__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_27_11_2022_16_24__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_27_11_2022_16_24__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_27_11_2022_16_24__Changes_.xml	(revision ecc0f9121721250f78ad22889ff2fa2e747cc703)
-+++ /dev/null	(revision ecc0f9121721250f78ad22889ff2fa2e747cc703)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_27_11_2022_16_24_[Changes]" date="1669559062406" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27_11_2022_16_24_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 27/11/2022 16:24 [Changes]" />
--</changelist>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_12_2022_11_36__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_12_2022_11_36__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_11_12_2022_11_36__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_12_2022_11_36__Changes_.xml	(revision e30ac4ecb75efc79e4bc95cc973ed15c070cbb6f)
+++ /dev/null	(revision e30ac4ecb75efc79e4bc95cc973ed15c070cbb6f)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_11_12_2022_11_36_[Changes]" date="1670751418242" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_12_2022_11_36_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 11/12/2022 11:36 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="app/src/main/res/drawable-v24/waze.jpg" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_12_2022_11_36_[Changes]/waze.jpg" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: app/src/androidTest/java/good_uml/useCase_diagram.puml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@startuml\r\n'https://plantuml.com/use-case-diagram\r\n\r\n:Main Admin: as Admin\r\n(Use the application- user) as (Use1)\r\n(Use the application-admin) as (Use2)\r\n(login)as (login1)\r\n(login)as (login2)\r\n(home) as (home1)\r\n(home) as (home2)\r\n(register) as (register)\r\n(profile user) as (profile1)\r\n(edit profile) as (edit profile)\r\n(profile admin) as (profile2)\r\n(search station) as (search station)\r\n(station data) as (station)\r\n(search station) as (search station2)\r\n(station data) as (station2)\r\n(add station) as (add station)\r\n(edit station) as (edit station)\r\n(Information of favorites stations and my reviews) as (favorites)\r\n(Navigate with Waze) as (Navigate with Waze)\r\n(Navigate with Waze) as (Navigate with Waze2)\r\n\r\n\r\nUser --> (Use1)\r\n(Use1) --> (register)\r\n(Use1) --> (login1)\r\n(register) --> (home1)\r\n(login1) --> (home1)\r\n(home1)-->(profile1)\r\n(profile1)-->(edit profile)\r\n(profile1)-->(favorites)\r\n(home1)-->(search station)\r\n(search station)--> (station)\r\n(station)--> (Navigate with Waze)\r\n(station)..->(home1)\r\n(favorites)..->(home1)\r\n(edit profile)..->(home1)\r\nnote right of User : User's processes\r\n\r\n''''''''''''''''''''''''''''\r\nAdmin ---> (Use2)\r\n(Use2) --> (login2)\r\n(login2) --> (home2)\r\n(home2)-->(profile2)\r\n(home2)-->(search station2)\r\n(search station2)-->(station2)\r\n(station2)-->(Navigate with Waze2)\r\n(profile2)..->(home2)\r\n(add station)..->(home2)\r\n(edit station)..->(home2)\r\n(profile2) --> (add station)\r\n(profile2) --> (edit station)\r\n(station2)..> (home2)\r\nnote right of Admin : Admin's processes\r\n\r\n\r\n\r\n\r\n@enduml
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/good_uml/useCase_diagram.puml b/app/src/androidTest/java/good_uml/useCase_diagram.puml
--- a/app/src/androidTest/java/good_uml/useCase_diagram.puml	(revision e30ac4ecb75efc79e4bc95cc973ed15c070cbb6f)
+++ b/app/src/androidTest/java/good_uml/useCase_diagram.puml	(date 1671181409513)
@@ -1,7 +1,7 @@
 @startuml
 'https://plantuml.com/use-case-diagram
 
-:Main Admin: as Admin
+: Admin: as Admin
 (Use the application- user) as (Use1)
 (Use the application-admin) as (Use2)
 (login)as (login1)
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <runningDeviceTargetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"RUNNING_DEVICE_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\shake\\.android\\avd\\Pixel_6_API_33.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </runningDeviceTargetSelectedWithDropDown>\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\shake\\.android\\avd\\Pixel_6_API_33.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2022-12-13T12:31:58.804846300Z\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision e30ac4ecb75efc79e4bc95cc973ed15c070cbb6f)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1671180882049)
@@ -1,17 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="deploymentTargetDropDown">
-    <runningDeviceTargetSelectedWithDropDown>
-      <Target>
-        <type value="RUNNING_DEVICE_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\shake\.android\avd\Pixel_6_API_33.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </runningDeviceTargetSelectedWithDropDown>
     <targetSelectedWithDropDown>
       <Target>
         <type value="QUICK_BOOT_TARGET" />
